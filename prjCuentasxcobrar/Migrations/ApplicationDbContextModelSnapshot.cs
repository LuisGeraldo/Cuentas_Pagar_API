// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prjCuentasxcobrar.Data;

namespace prjCuentasxcobrar.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("prjCuentasxcobrar.Models.ConceptoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255);

                    b.Property<int>("IdEstado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("ConceptoPagos");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.DocumentoPorPagar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdConceptoPago");

                    b.Property<int>("IdEstado");

                    b.Property<int>("IdProveedor");

                    b.Property<double>("Monto");

                    b.Property<string>("NoDocumento");

                    b.Property<string>("NoFactura");

                    b.HasKey("Id");

                    b.HasIndex("IdConceptoPago");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdProveedor");

                    b.ToTable("DocumentosPorPagar");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance");

                    b.Property<int>("IdEstado");

                    b.Property<int>("IdTipoPersona");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nombre")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTipoPersona");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TipoPersonas");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("IdRol");

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.ConceptoPago", b =>
                {
                    b.HasOne("prjCuentasxcobrar.Models.Estado", "Estado")
                        .WithMany("ConceptoPagos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.DocumentoPorPagar", b =>
                {
                    b.HasOne("prjCuentasxcobrar.Models.ConceptoPago", "ConceptoPago")
                        .WithMany("DocumentosPorPagar")
                        .HasForeignKey("IdConceptoPago")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("prjCuentasxcobrar.Models.Estado", "Estado")
                        .WithMany("DocumentosPorPagar")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("prjCuentasxcobrar.Models.Proveedor", "Proveedor")
                        .WithMany("DocumentoPorPagar")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.Proveedor", b =>
                {
                    b.HasOne("prjCuentasxcobrar.Models.Estado", "Estado")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("prjCuentasxcobrar.Models.TipoPersona", "TipoPersona")
                        .WithMany("TipoPersonas")
                        .HasForeignKey("IdTipoPersona")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("prjCuentasxcobrar.Models.Usuario", b =>
                {
                    b.HasOne("prjCuentasxcobrar.Models.Roles", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
